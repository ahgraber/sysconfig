#!/bin/bash
# Clone zcomet if necessary
if [[ ! -f ${ZDOTDIR:-${HOME}}/.zcomet/bin/zcomet.zsh ]]; then
  command git clone https://github.com/agkozak/zcomet.git "${ZDOTDIR:-${HOME}}/.zcomet/bin"
fi

# Activate Powerlevel10k Instant Prompt.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

source "${ZDOTDIR:-${HOME}}/.zcomet/bin/zcomet.zsh"
export ZSH_CONFIG="${HOME}/.zshconfig" # this repo's location

# fpath=($fpath $HOME/.zshconfig
typeset -U fpath

### set options
# export CLICOLOR=1
# export LSCOLORS=ExFxBxDxCxegedabagacad
export LS_COLORS="$(vivid generate snazzy)"
# completion
export CASE_SENSITIVE="true"
export HYPHEN_INSENSITIVE="true"
# correction
export ENABLE_CORRECTION="true"
# autosuggestions
export ZSH_AUTOSUGGEST_MANUAL_REBIND=1
# keymap
bindkey -e

# does order matter?
zcomet load romkatv/powerlevel10k

### settings from OMZ
zcomet snippet OMZ::lib/clipboard.zsh
zcomet snippet OMZ::lib/compfix.zsh

# zcomet snippet OMZ::lib/completion.zsh
# zcomet snippet OMZ::lib/correction.zsh
# zcomet snippet OMZ::lib/history.zsh

### additional plugins
zcomet load esc/conda-zsh-completion           # conda completions
zcomet load ohmyzsh plugins/direnv             # enable direnv

# zcomet load ohmyzsh plugins/fd                 # fd completions
# zcomet load ohmyzsh plugins/fzf                # fzf completions
zcomet load ohmyzsh plugins/gitfast            # git completions
zcomet load ohmyzsh plugins/safe-paste         # prevent pasted code from running
zcomet load ohmyzsh plugins/terraform          # terraform completions

# add homebrew completions
[[ $(command -v brew) ]] \
  && fpath=($(brew --prefix)/share/zsh/site-functions $fpath) #\
  # && zcomet load $(brew --prefix)/share/zsh/site-functions
# zcomet load "$ZSH_CONFIG/completions"          # watch local dir for completions; homebrew auto adds completions
zcomet load "$ZSH_CONFIG/functions"            # watch local dir for functions

### must be loaded late after all other modules that provide completion definitions
zcomet load zsh-users/zsh-completions

### Run compinit and compile its cache
zcomet compinit

# NOTE: fzf-tab needs to be loaded after compinit, but before plugins that wrap widgets,
# such as zsh-autosuggestions or fast-syntax-highlighting!!
zcomet load Aloxaf/fzf-tab
source "$HOME/.zcomet/repos/Aloxaf/fzf-tab/fzf-tab.plugin.zsh"

# zcomet load joshskidmore/zsh-fzf-history-search
# zcomet load chitoku-k/fzf-zsh-completions

# order must be: syntax-highlighting, history-substr-search, autosuggestions (see zprezto docs)
zcomet load ohmyzsh plugins/colorize           # multilanguage syntax highlighting
zcomet load zsh-users/zsh-syntax-highlighting
zcomet load zsh-users/zsh-history-substring-search
zcomet load zsh-users/zsh-autosuggestions

# pull zpm-zsh/clipboard and lazy-load
zcomet trigger clip open pbcopy pbpaste zpm-zsh/clipboard

### custom settings
for zsh in $ZSH_CONFIG/lib/*.zsh; do
  zcomet snippet "$zsh"
done
enable-fzf-tab

### load p10k config
# source $ZSH_CACHE_DIR/powerlevel10k/powerlevel10k.zsh-theme
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

### Source additional local files if they exist.
[[ -f ~/env.zsh ]] && source ~/env.zsh
[[ -f ~/.aliases ]] && source ~/.aliases

if [[ -f ~/.aliases.local ]]; then
  source ~/.aliases.local
else
  touch ~/.aliases.local
fi

if [[ -d ~/.fonts ]]; then
  for sh in ~/.fonts/*.sh; do
    source $sh
  done
fi

### Autodetect architecture (and set `brew` path)
if [[ "$(sysctl -a | grep machdep.cpu.brand_string)" == *Apple* ]]; then
  archcheck=$(/usr/bin/arch)
  typeset -g archcheck
  case $archcheck in
    arm64)
      archcheck+=' (Native)'
      if [[ -f /opt/homebrew/bin/brew ]]; then
        eval "$(/opt/homebrew/bin/brew shellenv)"
        alias brew='/opt/homebrew/bin/brew'
      fi
    ;;
    i386|x86_64)
      archcheck+=' (Rosetta)'
      if [[ -f /usr/local/homebrew/bin/brew ]]; then
        eval "$(/usr/local/homebrew/bin/brew shellenv)"
        alias brew='/usr/local/homebrew/bin/brew'
      fi
    ;;
    *)
      archcheck+=' (Unknown)'
    ;;
  esac

  # add arch to p10k
  function prompt_my_arch() {
    p10k segment -f 250 -i 'ðŸ’»' -t "${archcheck//\%/%%}"
  }

  POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS+=my_arch  # to specify location, modify ~/.p10k.zsh
fi

###########################################################
###                 User configuration                  ###
###########################################################
### Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='nano'
else
  export EDITOR='code'
fi

### >>> conda initialize >>>
### change this if for a different 'conda' source
# _conda_pfx="opt/anaconda3"
# _conda_pfx="miniconda3"
# _conda_pfx="miniforge3"
_conda_pfx="mambaforge"

# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$("/Users/${USERNAME}/${_conda_pfx}/bin/conda" 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/${USERNAME}/${_conda_pfx}/etc/profile.d/conda.sh" ]; then
        . "/Users/${USERNAME}/${_conda_pfx}/etc/profile.d/conda.sh"  # commented out by conda initialize
        # CONDA_CHANGEPS1=false conda activate base
    else
        export PATH="/Users/${USERNAME}/${_conda_pfx}/bin:$PATH"
    fi
fi
unset __conda_setup

if [ -f "/Users/${USERNAME}/${_conda_pfx}/etc/profile.d/mamba.sh" ]; then
    . "/Users/${USERNAME}/${_conda_pfx}/etc/profile.d/mamba.sh"
fi
### <<< conda initialize <<<
