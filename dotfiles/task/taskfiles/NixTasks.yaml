---
version: "3"

vars:
  SYS_CONFIG:
    sh: 'echo "$SYS_CONFIG"'
  SCRIPTS_DIR:
    sh: 'echo "$SYS_CONFIG/dotfiles/task/scripts"'

# ref:
# - https://nixos.org/manual/nix/stable/command-ref/nix-env.html
# - https://nixos.org/guides/nix-pills
# - https://github.com/ianthehenry/sd-nix
tasks:
  # default:
  #   silent: true
  #   cmds:
  #     -

  channel_add:
    desc: Add specified nix channel
    # silent: true
    cmds:
      - nix-channel --add {{.CLI_ARGS}}

  channel_rm:
    desc: Remove specified nix channel
    aliases: ["channel remove"]
    # silent: true
    cmds:
      - nix-channel --remove {{.CLI_ARGS}}

  gc:
    desc: Garbage collect
    # silent: true
    cmds:
      - nix-collect-garbage -d

  info:
    desc: "Get info about a nix pkg (hint: -- nixpkgs.<name>)"
    # silent: true
    cmds:
      - nix-env --query-available --attr {{.CLI_ARGS}} --description

  install:
    desc: "Install a nix pkg (hint: -- nixpkgs.<name>)"
    # silent: true
    cmds:
      - nix-env --install --attr {{.CLI_ARGS}}

  list:
    desc: List installed nix pkgs
    summary: List installed nix pkgs available in the active Nix expression
    # silent: true
    cmds:
      - nix-env --query --available --status

  moreinfo:
    desc: "Get long description about a nix pkg (hint: -- nixpkgs.<name>)"
    # silent: true
    cmds:
      - |
        nix-env --query-available --attr {{.CLI_ARGS}} --json  \
        | jq -r '.[] | .name + " " + .meta.description,
                 "",
                 (.meta.longDescription | rtrimstr("\n"))'
    preconditions:
      - sh: "[[ -n $(command -v jq) ]] || return 1"
        msg: |
          'jq' is required

  outdated:
    desc: Show outdated nix pkgs
    # silent: true
    cmds:
      - nix-env --query --compare-versions

  uninstall:
    desc: "Uninstall a nix pkg (hint: -- <name>)"
    aliases: ["remove"]
    # silent: true
    cmds:
      - nix-env --uninstall {{.CLI_ARGS}}
      # TODO: validate that package is uninstalled

  update:
    desc: Update / upgrade specified nix pkgs
    aliases: ["upgrade"]
    # silent: true
    cmds:
      - nix-channel --update
      - nix-env --upgrade --attrs {{.CLI_ARGS}}

  update_all:
    desc: Update / upgrade all nix pkgs
    aliases: ["upgrade-all"]
    # silent: true
    cmds:
      - nix-channel --update
      - nix-env --upgrade
#   switch:
#     desc: Switch to the new configuration
#     silent: true
#     cmds:
#       - home-manager switch

#   bootstrap:
#     desc: Bootstrap the home-manager configuration
#     silent: true
#     cmds:
#       - curl -L https://nixos.org/nix/install | sh
#       # TODO: if $(uname_os)
#       - source $HOME/.nix-profile/etc/profile.d/nix.sh
#       - export NIX_PATH=${NIX_PATH:+$NIX_PATH:}$HOME/.nix-defexpr/channels:/nix/var/nix/profiles/per-user/root/channels
#       - nix-channel --add https://github.com/nix-community/home-manager/archive/master.tar.gz home-manager
#       - task: update
#       - nix-shell '<home-manager>' -A install
#       - task: switch
#       - echo "$HOME/.nix-profile/bin/zsh" | sudo tee -a /etc/shells
#       - chsh -s $HOME/.nix-profile/bin/zsh
